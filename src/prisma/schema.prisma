generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int                 @id @default(autoincrement())
  username  String              @unique
  email     String              @unique
  password  String
  posts     post[]
  story     story[]
  user_info user_info?
}

model user_info {
  id         Int    @id @default(autoincrement())
  firstname  String
  lastname   String
  university String
  live       String
  job        String
  role       Int
  userid     Int    @unique
  user       user   @relation(fields: [userid], references: [id])
}

model post {
  id        Int      @id @default(autoincrement())
  authorid  Int
  content   String
  create_at DateTime @default(now())
  author    user     @relation(fields: [authorid], references: [id])
  photoPost photo[] 
  videoPost video[]   
}

model story {
  id         Int      @id @default(autoincrement())
  authorid   Int
  content    String
  create_at  DateTime @default(now())
  photoId    Int      @unique
  author     user     @relation(fields: [authorid], references: [id])
  photoStory photo    @relation(fields: [photoId], references: [id])
}

model photo {
  id    Int    @id @default(autoincrement())
  url   String
  postid Int  
  story story?
  postof  post   @relation(fields: [postid] ,references: [id])  
}

model video {
  id    Int    @id @default(autoincrement())
  url   String
  postid Int  
  postof  post   @relation(fields: [postid] ,references: [id])  
}

model vulnerable {
  id Int @id @default(autoincrement())
  name String
  status String
}


// model Message {
//   senderId      Int 
//   receiverId    Int
//   userid1      User @relation(fields: [senderId] ,references: [id],name: "sender")
//   userid2      User @relation(fields: [receiverId] ,references: [id],name: "receive")
//   messsage_text String
//   create_at     DateTime            @default(now())
//  @@id([senderId,receiverId])
// }

